var search_data = {"index":{"searchIndex":["apropos","aide","avantapres","boutons","cadreaide","case","choixdifficulte","choixmode","confirmquit","connexion","creationprofil","dir","fenetre","finjeu","generateur","gestionmemento","grille","index","invite","joueur","listecandidat","menuprofil","object","partie","plateau","position","preferences","sauvegarde","score","sousgrille","symbole","symboleplacer","timer","windowsudoku","<=>()","absentcolonne()","absentligne()","absentregion()","add()","add()","addmemento()","afficherlesmethodesderesolution()","afficherplateau()","ajoutscore()","canredo?()","canundo?()","cancelhint()","candidatgrille()","candidatimpossible()","candidatpossible()","candidatpossible()","candidatunique()","caseresolvable()","chargement()","colorcaseincorrect()","colorcaseresolvable()","complete?()","completegrille()","correctgrille?()","coupsuivant()","creer()","creer()","creer()","creer()","creer()","creer()","creer()","creer()","creer()","creerpartie()","creerprofil()","deuxoccurencetab?()","each()","each()","explicationchoix()","finpartie()","get()","getaccumulated()","getaide()","getcandidat()","getcase()","getcasejoueur()","getcaselistecandidat()","getcaseoriginale()","getcheckpoint()","getcolonne()","getcoordfocus()","getidentifiant()","getligne()","getlistecandidat()","getoriginalegrille()","getpartie()","getplateau()","getposition()","getpseudo()","getregion()","getscore()","getscorejoueur()","getsolutionjoueur()","getsolutionoriginale()","getsymbole()","gettimer()","getundoredo()","getx()","gety()","include?()","lancetemps()","loadallcandidats()","loadcandidatscase()","loadpartie()","loadprofil()","loadsave()","make_diagonal()","make_valid()","make_valid_incomplete()","morehint()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nouvelle()","penalite()","placercandidat()","placersymbole()","plein?()","printjoueur()","printori()","printori()","rafraichirgrille()","redo()","reduiregrille()","remove()","remove()","remplirgrille()","reset()","resetallcandidats()","resetcandidatcase()","resetcoloronall()","resetcouleursurfocus()","resetcouleursurfocus()","resoudre()","retirercandidat()","retirersymbole()","savepartie()","saveprofil()","semettredansprofil()","set()","setaide()","setaidetext()","setcadreaide()","setcandidatstate()","setcandidatsurfocus()","setcasejoueur()","setcaseoriginale()","setcasesolutionoriginale()","setcasevaleur()","setcoloronvalue()","setcouleurboutons()","setcouleurcase()","setcouleursurfocus()","setcouleursurfocus()","setoriginale()","setpartie()","setplateau()","setsave()","setscore()","setsolutionjoueur()","setsolutionoriginale()","setvaleursurfocus()","singlebox()","start()","starthint()","stop()","stoptemps()","supprimerprofil()","tick()","to_s()","to_s()","to_s()","to_s()","undo()","validegrille()","verificationgrille()","readme","sudoku.sublime-workspace"],"longSearchIndex":["apropos","aide","avantapres","boutons","cadreaide","case","choixdifficulte","choixmode","confirmquit","connexion","creationprofil","dir","fenetre","finjeu","generateur","gestionmemento","grille","index","invite","joueur","listecandidat","menuprofil","object","partie","plateau","position","preferences","sauvegarde","score","sousgrille","symbole","symboleplacer","timer","windowsudoku","joueur#<=>()","plateau#absentcolonne()","plateau#absentligne()","plateau#absentregion()","listecandidat#add()","symbole#add()","gestionmemento#addmemento()","aide#afficherlesmethodesderesolution()","partie#afficherplateau()","joueur#ajoutscore()","gestionmemento#canredo?()","gestionmemento#canundo?()","cadreaide#cancelhint()","aide#candidatgrille()","plateau#candidatimpossible()","aide#candidatpossible()","plateau#candidatpossible()","aide#candidatunique()","aide#caseresolvable()","fenetre#chargement()","grille#colorcaseincorrect()","grille#colorcaseresolvable()","plateau#complete?()","plateau#completegrille()","plateau#correctgrille?()","aide#coupsuivant()","aide::creer()","avantapres::creer()","dir::creer()","gestionmemento::creer()","joueur::creer()","listecandidat::creer()","sauvegarde::creer()","score::creer()","symbole::creer()","partie#creerpartie()","joueur#creerprofil()","plateau#deuxoccurencetab?()","generateur#each()","plateau#each()","aide#explicationchoix()","partie#finpartie()","generateur#get()","timer#getaccumulated()","partie#getaide()","case#getcandidat()","plateau#getcase()","plateau#getcasejoueur()","plateau#getcaselistecandidat()","plateau#getcaseoriginale()","partie#getcheckpoint()","plateau#getcolonne()","grille#getcoordfocus()","joueur#getidentifiant()","plateau#getligne()","listecandidat#getlistecandidat()","case#getoriginalegrille()","grille#getpartie()","partie#getplateau()","case#getposition()","joueur#getpseudo()","plateau#getregion()","score#getscore()","joueur#getscorejoueur()","case#getsolutionjoueur()","case#getsolutionoriginale()","symbole#getsymbole()","partie#gettimer()","partie#getundoredo()","position#getx()","position#gety()","listecandidat#include?()","partie#lancetemps()","sousgrille#loadallcandidats()","sousgrille#loadcandidatscase()","sauvegarde::loadpartie()","sauvegarde#loadprofil()","partie::loadsave()","generateur#make_diagonal()","generateur#make_valid()","generateur#make_valid_incomplete()","cadreaide#morehint()","apropos::new()","aide::new()","avantapres::new()","boutons::new()","boutons#new()","cadreaide::new()","case::new()","choixdifficulte::new()","choixmode::new()","confirmquit::new()","connexion::new()","creationprofil::new()","dir::new()","fenetre::new()","finjeu::new()","generateur::new()","gestionmemento::new()","grille::new()","index::new()","invite::new()","joueur::new()","listecandidat::new()","menuprofil::new()","partie::new()","plateau::new()","position::new()","preferences::new()","sauvegarde::new()","score::new()","sousgrille#new()","sousgrille::new()","symbole::new()","windowsudoku::new()","partie::nouvelle()","timer#penalite()","listecandidat::placercandidat()","symbole::placersymbole()","plateau#plein?()","case#printjoueur()","case#printori()","plateau#printori()","grille#rafraichirgrille()","gestionmemento#redo()","plateau#reduiregrille()","listecandidat#remove()","symbole#remove()","grille#remplirgrille()","timer#reset()","sousgrille#resetallcandidats()","sousgrille#resetcandidatcase()","grille#resetcoloronall()","boutons#resetcouleursurfocus()","grille#resetcouleursurfocus()","aide#resoudre()","listecandidat::retirercandidat()","symbole::retirersymbole()","sauvegarde::savepartie()","sauvegarde#saveprofil()","dir#semettredansprofil()","generateur#set()","cadreaide#setaide()","cadreaide#setaidetext()","grille#setcadreaide()","sousgrille#setcandidatstate()","sousgrille#setcandidatsurfocus()","plateau#setcasejoueur()","plateau#setcaseoriginale()","plateau#setcasesolutionoriginale()","grille#setcasevaleur()","grille#setcoloronvalue()","boutons#setcouleurboutons()","grille#setcouleurcase()","boutons#setcouleursurfocus()","grille#setcouleursurfocus()","case#setoriginale()","grille#setpartie()","partie#setplateau()","partie#setsave()","score#setscore()","case#setsolutionjoueur()","case#setsolutionoriginale()","grille#setvaleursurfocus()","aide#singlebox()","timer#start()","cadreaide#starthint()","timer#stop()","partie#stoptemps()","dir#supprimerprofil()","timer#tick()","generateur#to_s()","joueur#to_s()","plateau#to_s()","position#to_s()","gestionmemento#undo()","plateau#validegrille()","aide#verificationgrille()","",""],"info":[["APropos","","APropos.html","",""],["Aide","","Aide.html","",""],["AvantApres","","AvantApres.html","",""],["Boutons","","Boutons.html","",""],["CadreAide","","CadreAide.html","",""],["Case","","Case.html","",""],["ChoixDifficulte","","ChoixDifficulte.html","",""],["ChoixMode","","ChoixMode.html","",""],["ConfirmQuit","","ConfirmQuit.html","",""],["Connexion","","Connexion.html","",""],["CreationProfil","","CreationProfil.html","",""],["Dir","","Dir.html","","<p>Dir, repertoire de creation de profil(joueur)\n<p><strong>Variable</strong>  :\n\n<pre>- +pseudo+ -&gt; pseudo du joueur</pre>\n"],["Fenetre","","Fenetre.html","",""],["FinJeu","","FinJeu.html","",""],["Generateur","","Generateur.html","",""],["GestionMemento","","GestionMemento.html","",""],["Grille","","Grille.html","",""],["Index","","Index.html","",""],["Invite","","Invite.html","",""],["Joueur","","Joueur.html","","<p>Joueur, un joueur de sudoku\n<p><strong>Variable</strong>  :\n\n<pre>- +pseudo+ -&gt; pseudo du joueur\n- +tabScore+ -&gt; le tableau du score ...</pre>\n"],["ListeCandidat","","ListeCandidat.html","",""],["MenuProfil","","MenuProfil.html","",""],["Object","","Object.html","",""],["Partie","","Partie.html","",""],["Plateau","","Plateau.html","",""],["Position","","Position.html","",""],["Preferences","","Preferences.html","",""],["Sauvegarde","","Sauvegarde.html","",""],["Score","","Score.html","","<p><strong>Heritage</strong>  : Aucun lien\n\n"],["SousGrille","","SousGrille.html","",""],["Symbole","","Symbole.html","",""],["SymbolePlacer","","SymbolePlacer.html","",""],["Timer","","Timer.html","","<p><strong>Heritage</strong>  : Aucun lien\n\n"],["WindowSudoku","","WindowSudoku.html","",""],["<=>","Joueur","Joueur.html#method-i-3C-3D-3E","(unJoueur)","<p><strong>Description</strong>:\n\n<p>méthode de comparaison d&#39;un joueur\n<p>*Paramètre*:\n"],["absentColonne","Plateau","Plateau.html#method-i-absentColonne","(chiffre, colonne)","<p>Méthode qui vérifie si un chiffre est dans une colonne\n<p><p>Paramètre : &mdash; chiffre Le chiffre ligne La ligne  …\n\n"],["absentLigne","Plateau","Plateau.html#method-i-absentLigne","(chiffre, ligne)","<p>Méthode qui vérifie si un chiffre est sur une ligne\n<p><p>Paramètre : &mdash; chiffre Le chiffre ligne La ligne\n\n<p><p>Retourne … &mdash; "],["absentRegion","Plateau","Plateau.html#method-i-absentRegion","(chiffre, posX, posY)","<p>Méthode qui vérifie si un chiffre est dans une région\n<p><p>Paramètre : &mdash; chiffre Le chiffre ligne La ligne\n\n<p><p>Retourne … &mdash; "],["add","ListeCandidat","ListeCandidat.html#method-i-add","(symbole)","<p>Méthode pour ajouter un candidat @param [Fixnum] symbole @return : self\n"],["add","Symbole","Symbole.html#method-i-add","(symbole)","<p>Méthode pour ajouter un symbole\n<p><p>Paramètre : &mdash; symbole\n\n<p><p>Retourne : &mdash; self\n"],["addMemento","GestionMemento","GestionMemento.html#method-i-addMemento","()","<p>Méthode qui permet de sauvegarder un memento.\n<p><p>Retourne : &mdash; self\n\n\n"],["afficherLesMethodesDeResolution","Aide","Aide.html#method-i-afficherLesMethodesDeResolution","()","<p>Affiche les méthodes de résolution\n"],["afficherPlateau","Partie","Partie.html#method-i-afficherPlateau","()","<p>Affiche le plateau (thank&#39;s Captain Obvious)\n"],["ajoutScore","Joueur","Joueur.html#method-i-ajoutScore","(unScore, niveauDifficulte)","<p><strong>Description</strong>:\n\n<p>méthode permettant d&#39;ajouter un score dans les stats du joueur, ajout\nseulement si le …\n"],["canRedo?","GestionMemento","GestionMemento.html#method-i-canRedo-3F","()","<p>Méthode qui retourne vrai si on peut redo, sinon faux\n<p><p>Retourne : &mdash; booleen\n\n\n"],["canUndo?","GestionMemento","GestionMemento.html#method-i-canUndo-3F","()","<p>Méthode qui retourne vrai si on peut undo, sinon faux\n<p><p>Retourne : &mdash; booleen\n\n\n"],["cancelHint","CadreAide","CadreAide.html#method-i-cancelHint","()",""],["candidatGrille","Aide","Aide.html#method-i-candidatGrille","()","<p>Place tous les candidats de chaque case du plateau\n"],["candidatImpossible","Plateau","Plateau.html#method-i-candidatImpossible","(position)","<p>Méthode qui retourne les listes des candidats impossibles pour une case\n<p><p>Paramètre : &mdash; position La position …\n\n"],["candidatPossible","Aide","Aide.html#method-i-candidatPossible","(position)","<p>Place tous les candidats de la case\n\n<pre>* [Paramètre :]\n                             position</pre>\n"],["candidatPossible","Plateau","Plateau.html#method-i-candidatPossible","(position)","<p>Méthode qui retourne les listes des candidats pour une case\n<p><p>Paramètre : &mdash; position La position de la case …\n\n"],["candidatUnique","Aide","Aide.html#method-i-candidatUnique","()","<p>Retourne la liste des cases qui ont plusieurs candidats mais une solution\nunique\n"],["caseResolvable","Aide","Aide.html#method-i-caseResolvable","()","<p>Méthode qui retourne la position des cases avec un unique candidat\n"],["chargement","Fenetre","Fenetre.html#method-i-chargement","()",""],["colorCaseIncorrect","Grille","Grille.html#method-i-colorCaseIncorrect","()",""],["colorCaseResolvable","Grille","Grille.html#method-i-colorCaseResolvable","()",""],["complete?","Plateau","Plateau.html#method-i-complete-3F","()","<p>Méthode qui vérifie si la grille est complète et correct\n<p><p>Paramètre : &mdash; symbole\n\n<p><p>Retourne : &mdash; booleen\n"],["completeGrille","Plateau","Plateau.html#method-i-completeGrille","()","<p>Méthode pour générer une grille complete aléatoirement\n<p><p>Retourne : &mdash; self\n\n\n"],["correctGrille?","Plateau","Plateau.html#method-i-correctGrille-3F","()","<p>Méthode qui vérifie si la grille est correct\n<p><p>Retourne : &mdash; booleen\n\n\n"],["coupSuivant","Aide","Aide.html#method-i-coupSuivant","()","<p>Indique la position du coup suivant à jouer\n"],["creer","Aide","Aide.html#method-c-creer","(partie)",""],["creer","AvantApres","AvantApres.html#method-c-creer","(avant, apres)","<p>Constucteur de la classe\n<p><p>Paramètre avant: &mdash; l&#39;etat precedant\n\n<p><p>Paramètre apres : &mdash; l&#39;etat suivant\n"],["creer","Dir","Dir.html#method-c-creer","(unPseudo)","<p><strong>Description</strong>:\n\n<p>méthode de création d&#39;un repertoire(profil)\n<p>*Paramètre*:\n"],["creer","GestionMemento","GestionMemento.html#method-c-creer","(partie)","<p>Constructeur de la classe\n<p><p>Paramètre : &mdash; plateau\n\n\n"],["creer","Joueur","Joueur.html#method-c-creer","(unPseudo)","<p><strong>Description</strong>:\n\n<p>méthode de création d&#39;un joueur\n<p>*Paramètre*:\n"],["creer","ListeCandidat","ListeCandidat.html#method-c-creer","()","<p>Constructeur de la classe @return : self\n"],["creer","Sauvegarde","Sauvegarde.html#method-c-creer","()","<p>@jeu : la partie @dateSave\n"],["creer","Score","Score.html#method-c-creer","()",""],["creer","Symbole","Symbole.html#method-c-creer","()","<p>Constructeur de la classe @return : self\n"],["creerPartie","Partie","Partie.html#method-i-creerPartie","()","<p>Creer une partie jouable\n"],["creerProfil","Joueur","Joueur.html#method-i-creerProfil","()","<p>Créer un dossier ayant comme nom @pseudo. Retourne true si le dossier\nexiste déjà. False sinon, et le …\n"],["deuxOccurenceTab?","Plateau","Plateau.html#method-i-deuxOccurenceTab-3F","(tab)","<p>Méthode qui vérifie si il y a au moins deux occurence d&#39;un symbole dans\nun tableau\n<p><p>Retourne : &mdash; booleen …\n\n\n"],["each","Generateur","Generateur.html#method-i-each","()","<p>Parcourt tout le sudoku\n\n<pre>@yield [x, y, val] la position et la valeur courante\n* [Retourne :]\n          ...</pre>\n"],["each","Plateau","Plateau.html#method-i-each","()","<p>Méthode pour le parcours de la grille du plateau @yield [x, y, val] la\nposition et la valeur courante …\n"],["explicationChoix","Aide","Aide.html#method-i-explicationChoix","(candidat, pos)","<p>Le joueur indique en paramètre le symbole candidat de la position si\nc&#39;est possible, on retourne …\n"],["finPartie","Partie","Partie.html#method-i-finPartie","()","<p>Méthode qui fait le traitement de fin de partie si la grille est complete\n"],["get","Generateur","Generateur.html#method-i-get","(x, y)","<p>Renvoie la valeur en x,y\n\n<pre>* [Retourne :]\n            Fixnum</pre>\n"],["getAccumulated","Timer","Timer.html#method-i-getAccumulated","()","<p>Méthode qui renvoie accumulated\n"],["getAide","Partie","Partie.html#method-i-getAide","()",""],["getCandidat","Case","Case.html#method-i-getCandidat","()","<p>OK Méthode qui retourne la liste des candidats de la case\n<p><p>Retourne : &mdash; Candidat\n\n\n"],["getCase","Plateau","Plateau.html#method-i-getCase","(position)",""],["getCaseJoueur","Plateau","Plateau.html#method-i-getCaseJoueur","(position)","<p>Méthode qui retourne la solution du joueur pour la case\n<p><p>Paramètre : &mdash; position La position de la case …\n\n"],["getCaseListeCandidat","Plateau","Plateau.html#method-i-getCaseListeCandidat","(position)","<p>OK Méthode qui retourne la liste des candidats pour la case\n<p><p>Paramètre : &mdash; position La position de la case …\n\n"],["getCaseOriginale","Plateau","Plateau.html#method-i-getCaseOriginale","(position)","<p>Méthode qui retourne la solution orignale de la case\n<p><p>Paramètre : &mdash; position La position de la case\n\n<p><p>Retourne … &mdash; "],["getCheckPoint","Partie","Partie.html#method-i-getCheckPoint","()",""],["getColonne","Plateau","Plateau.html#method-i-getColonne","(colonne)","<p>Méthode qui retourne un tableau des valeurs d&#39;une colonne spécifié\n<p><p>Paramètre : &mdash; colonne La colonne …\n\n"],["getCoordFocus","Grille","Grille.html#method-i-getCoordFocus","()",""],["getIdentifiant","Joueur","Joueur.html#method-i-getIdentifiant","()","<p><strong>Description</strong>:\n\n<p>méthode qui permet de donner l’identifiant du joueur.\n<p><strong>Exemple</strong>:\n"],["getLigne","Plateau","Plateau.html#method-i-getLigne","(ligne)","<p>Méthode qui retourne un tableau des valeurs d&#39;une ligne spécifié\n<p><p>Paramètre : &mdash; ligne La ligne qu&#39;il …\n\n"],["getListeCandidat","ListeCandidat","ListeCandidat.html#method-i-getListeCandidat","()","<p>Méthode qui retourne le tableau des candidats @return : [Fixnum] Array\n"],["getOriginaleGrille","Case","Case.html#method-i-getOriginaleGrille","()","<p>Méthode qui retourne si une case est originale du puzzle\n<p><p>Retourne : &mdash; booleen\n\n\n"],["getPartie","Grille","Grille.html#method-i-getPartie","()",""],["getPlateau","Partie","Partie.html#method-i-getPlateau","()","<p>Retourne le plateau\n"],["getPosition","Case","Case.html#method-i-getPosition","()","<p>Méthode qui retourne la position de la case\n<p><p>Retourne : &mdash; Position\n\n\n"],["getPseudo","Joueur","Joueur.html#method-i-getPseudo","()","<p><strong>Description</strong>:\n\n<p>méthode qui permet de donner le pseudo du joueur.\n<p><strong>Exemple</strong>:\n"],["getRegion","Plateau","Plateau.html#method-i-getRegion","(posX, posY)","<p>Méthode qui retourne un tableau des valeurs d&#39;une region spécifié\n<p><p>Paramètre : &mdash; region La region qu&#39;il …\n\n"],["getScore","Score","Score.html#method-i-getScore","()","<p>Méthode qui renvoie le score\n<p><p>Retourne : &mdash; Le score\n\n\n"],["getScoreJoueur","Joueur","Joueur.html#method-i-getScoreJoueur","(niveauDifficulte)","<p><strong>Description</strong>:\n\n<p>méthode permettant de donner un score du joueur\n<p>*Paramètre*:\n"],["getSolutionJoueur","Case","Case.html#method-i-getSolutionJoueur","()","<p>Méthode qui retourne la solution du joueur pour la case\n<p><p>Retourne : &mdash; Integer\n\n\n"],["getSolutionOriginale","Case","Case.html#method-i-getSolutionOriginale","()","<p>Méthode qui retourne la solution originale de la case\n<p><p>Retourne : &mdash; Integer\n\n\n"],["getSymbole","Symbole","Symbole.html#method-i-getSymbole","()","<p>Méthode qui retourne vrai si le candidat est présent @param [Fixnum]\nsymbole @return : vrai ou faux\n"],["getTimer","Partie","Partie.html#method-i-getTimer","()",""],["getUndoRedo","Partie","Partie.html#method-i-getUndoRedo","()",""],["getX","Position","Position.html#method-i-getX","()","<p>Méthode qui retroune la position en abscisse d&#39;une case\n"],["getY","Position","Position.html#method-i-getY","()","<p>Méthode qui retorune la position en ordonnée d&#39;une case\n"],["include?","ListeCandidat","ListeCandidat.html#method-i-include-3F","(symbole)","<p>Méthode qui retourne vrai si le candidat est présent @param [Fixnum]\nsymbole @return : vrai ou faux\n"],["lanceTemps","Partie","Partie.html#method-i-lanceTemps","(init)",""],["loadAllCandidats","SousGrille","SousGrille.html#method-i-loadAllCandidats","()",""],["loadCandidatsCase","SousGrille","SousGrille.html#method-i-loadCandidatsCase","(x, y)",""],["loadPartie","Sauvegarde","Sauvegarde.html#method-c-loadPartie","(nomPartie)","<p>Méthode qui charge une partie\n<p><p>Paramètre : &mdash; Le nom de la partie\n\n<p><p>Retourne : &mdash; La partie\n"],["loadProfil","Sauvegarde","Sauvegarde.html#method-i-loadProfil","(nomJoueur)","<p>Méthode qui charge un profil de joueur\n<p><p>Paramètre : &mdash; Le nom du joueur\n\n\n"],["loadSave","Partie","Partie.html#method-c-loadSave","(nomPartie)","<p>nomPartie est le nom du fichier à charger.\n"],["make_diagonal","Generateur","Generateur.html#method-i-make_diagonal","()","<p>Remplit la diagonale descendante de 1 a self.size\n\n<pre>* [Retourne :]\n            self</pre>\n"],["make_valid","Generateur","Generateur.html#method-i-make_valid","()","<p>Remplit tout le sudoku de maniere a ce qu&#39;il soit valide\n\n<pre>* [Retourne :]\n            self</pre>\n"],["make_valid_incomplete","Generateur","Generateur.html#method-i-make_valid_incomplete","(seed=2)","<p>Cree un sudoku valide et laisse des cases vides au hasard\n\n<pre>* [Parametre :]\n            [Fixnum]seed Le ...</pre>\n"],["moreHint","CadreAide","CadreAide.html#method-i-moreHint","()",""],["new","APropos","APropos.html#method-c-new","(invite)",""],["new","Aide","Aide.html#method-c-new","(partie)",""],["new","AvantApres","AvantApres.html#method-c-new","(avant, apres)",""],["new","Boutons","Boutons.html#method-c-new","(grille, sousGrille)",""],["new","Boutons","Boutons.html#method-i-new","(grille, sousGrille)",""],["new","CadreAide","CadreAide.html#method-c-new","(grille, sousGrille)",""],["new","Case","Case.html#method-c-new","(position)","<p>Initialisation de la position d&#39;une case de la grille\n"],["new","ChoixDifficulte","ChoixDifficulte.html#method-c-new","(invite)",""],["new","ChoixMode","ChoixMode.html#method-c-new","()",""],["new","ConfirmQuit","ConfirmQuit.html#method-c-new","(partie)",""],["new","Connexion","Connexion.html#method-c-new","()",""],["new","CreationProfil","CreationProfil.html#method-c-new","(invite)",""],["new","Dir","Dir.html#method-c-new","(unPseudo)",""],["new","Fenetre","Fenetre.html#method-c-new","(partie)","<p>@cadreAide @boutons @sousGrille @grille\n"],["new","FinJeu","FinJeu.html#method-c-new","()",""],["new","Generateur","Generateur.html#method-c-new","(base=3)",""],["new","GestionMemento","GestionMemento.html#method-c-new","(partie)",""],["new","Grille","Grille.html#method-c-new","(partie)",""],["new","Index","Index.html#method-c-new","()",""],["new","Invite","Invite.html#method-c-new","()",""],["new","Joueur","Joueur.html#method-c-new","(unPseudo)",""],["new","ListeCandidat","ListeCandidat.html#method-c-new","()",""],["new","MenuProfil","MenuProfil.html#method-c-new","()",""],["new","Partie","Partie.html#method-c-new","(difficulte)",""],["new","Plateau","Plateau.html#method-c-new","()","<p>Constructeur du plateau de jeu\n<p><p>Retourne : &mdash; self\n\n\n"],["new","Position","Position.html#method-c-new","(posX, posY)","<p>Initialisation de la position d&#39;une case\n"],["new","Preferences","Preferences.html#method-c-new","()",""],["new","Sauvegarde","Sauvegarde.html#method-c-new","()",""],["new","Score","Score.html#method-c-new","()","<p>Constructeur de la classe  Score\n"],["new","SousGrille","SousGrille.html#method-i-new","(grille)",""],["new","SousGrille","SousGrille.html#method-c-new","(grille)",""],["new","Symbole","Symbole.html#method-c-new","()",""],["new","WindowSudoku","WindowSudoku.html#method-c-new","(titre)",""],["nouvelle","Partie","Partie.html#method-c-nouvelle","(difficulte)","<p>Constructeur d&#39;une partie\n"],["penalite","Timer","Timer.html#method-i-penalite","(s)","<p>Méthode qui permet d&#39;ajouter un nombre de seconde de “pénalité”\n"],["placerCandidat","ListeCandidat","ListeCandidat.html#method-c-placerCandidat","(plateau, pos, symbole)","<p>Méthode qui permet de placer un candidat sur une case @param plateau\nplateau @param position pos @param …\n"],["placerSymbole","Symbole","Symbole.html#method-c-placerSymbole","(plateau, pos, symbole)","<p>Méthode qui permet de placer un symbole sur une case @param plateau plateau\n@param position pos @param …\n"],["plein?","Plateau","Plateau.html#method-i-plein-3F","()","<p>Méthode qui vérifie si toutes les cases de la grilles sont remplies\n<p><p>Retourne : &mdash; booleen\n\n\n"],["printJoueur","Case","Case.html#method-i-printJoueur","()",""],["printOri","Case","Case.html#method-i-printOri","()","<p>Affichage d&#39;une solution de la Case\n"],["printOri","Plateau","Plateau.html#method-i-printOri","()","<p>Affichage propre des valeurs originale de la grille du Plateau\n<p><p>Retourne : &mdash; string\n\n\n"],["rafraichirGrille","Grille","Grille.html#method-i-rafraichirGrille","()",""],["redo","GestionMemento","GestionMemento.html#method-i-redo","()","<p>Méthode qui permet de revenir à l&#39;état suivant la dernière action\n<p><p>Retourne : &mdash; memento ou nil\n\n\n"],["reduireGrille","Plateau","Plateau.html#method-i-reduireGrille","(position, niveauDifficulte)","<p>Méthode pour réduire une grille en la gardant jouable\n<p><p>Retourne : &mdash; self\n\n\n"],["remove","ListeCandidat","ListeCandidat.html#method-i-remove","(symbole)","<p>Méthode pour supprimer un candidat @param [Fixnum] symbole @return : self\n"],["remove","Symbole","Symbole.html#method-i-remove","(symbole)","<p>Méthode pour supprimer un symbole @param [Fixnum] symbole @return : self\n"],["remplirGrille","Grille","Grille.html#method-i-remplirGrille","()",""],["reset","Timer","Timer.html#method-i-reset","()","<p>Méthode de remise à zero du Timer\n"],["resetAllCandidats","SousGrille","SousGrille.html#method-i-resetAllCandidats","()",""],["resetCandidatCase","SousGrille","SousGrille.html#method-i-resetCandidatCase","(x,y)",""],["resetColorOnAll","Grille","Grille.html#method-i-resetColorOnAll","()",""],["resetCouleurSurFocus","Boutons","Boutons.html#method-i-resetCouleurSurFocus","()","<p>Méthode qui reset la couleur du focus\n"],["resetCouleurSurFocus","Grille","Grille.html#method-i-resetCouleurSurFocus","()",""],["resoudre","Aide","Aide.html#method-i-resoudre","()","<p>Resoud la grille\n"],["retirerCandidat","ListeCandidat","ListeCandidat.html#method-c-retirerCandidat","(plateau, pos, symbole)","<p>Méthode qui permet d&#39;enlever un candidat d&#39;une case @param plateau\nplateau @param position pos …\n"],["retirerSymbole","Symbole","Symbole.html#method-c-retirerSymbole","(plateau, pos, symbole)","<p>Méthode qui permet d&#39;enlever un symbole d&#39;une case @param plateau\nplateau @param position pos …\n"],["savePartie","Sauvegarde","Sauvegarde.html#method-c-savePartie","(partie, nomPartie)","<p>Méthode qui sauvegarde une partie\n<p><p>Paramètre : &mdash; La partie Le nom de la partie\n\n\n"],["saveProfil","Sauvegarde","Sauvegarde.html#method-i-saveProfil","()","<p>Méthode qui sauvegarde un profil\n"],["semettreDansProfil","Dir","Dir.html#method-i-semettreDansProfil","(unPseudo)","<p><strong>Description</strong>:\n\n<p>méthode qui permet de se mettre dans un repertoire(profil)\n<p>*Paramètre*:\n"],["set","Generateur","Generateur.html#method-i-set","(x, y, val)","<p>Renvoie le coté du Sudoku\n\n<pre>* [Retourne :]\n            Fixnum</pre>\n"],["setAide","CadreAide","CadreAide.html#method-i-setAide","(titre, listeCase, desc)","\n<pre>def loadMethode(n)\n        case n\n        when 1\n                # load la première méthode\n        when ...</pre>\n"],["setAideText","CadreAide","CadreAide.html#method-i-setAideText","(text)","<p>Méthode qui défini un texte dans l&#39;aide\n<p><p>Paramètre : &mdash; text =&gt; texte de l&#39;aide\n\n\n"],["setCadreAide","Grille","Grille.html#method-i-setCadreAide","(cadreAide)",""],["setCandidatState","SousGrille","SousGrille.html#method-i-setCandidatState","(bool)",""],["setCandidatSurFocus","SousGrille","SousGrille.html#method-i-setCandidatSurFocus","(candidat)",""],["setCaseJoueur","Plateau","Plateau.html#method-i-setCaseJoueur","(position, valeur)","<p>Méthode pour la MAJ de la solution du joueur pour la case\n<p><p>Paramètre : &mdash; position La position de la case …\n\n"],["setCaseOriginale","Plateau","Plateau.html#method-i-setCaseOriginale","(position, originale)",""],["setCaseSolutionOriginale","Plateau","Plateau.html#method-i-setCaseSolutionOriginale","(position, valeur)","<p>Méthode pour la MAJ de la solution originale de la case\n<p><p>Paramètre : &mdash; position La position de la case valeur …\n\n"],["setCaseValeur","Grille","Grille.html#method-i-setCaseValeur","(x, y, valeur)",""],["setColorOnValue","Grille","Grille.html#method-i-setColorOnValue","(value, couleur)",""],["setCouleurBoutons","Boutons","Boutons.html#method-i-setCouleurBoutons","(couleur)","<p>Méthode qui change la couleur du bouton\n<p><p>Paramètre : &mdash; couleur =&gt; la couleur qu&#39;on met sur le bouton …\n\n\n"],["setCouleurCase","Grille","Grille.html#method-i-setCouleurCase","(x, y, couleur)",""],["setCouleurSurFocus","Boutons","Boutons.html#method-i-setCouleurSurFocus","(couleur)","<p>Méthode qui change la couleur du focus\n<p><p>Paramètre : &mdash; couleur =&gt; la couleur qu&#39;on met sur le focus …\n\n\n"],["setCouleurSurFocus","Grille","Grille.html#method-i-setCouleurSurFocus","(couleur)",""],["setOriginale","Case","Case.html#method-i-setOriginale","(originale)","<p># OK # Méthode pour la MAJ de la liste des candidats de la case\n<p><p>Paramètre : &mdash; [Fixnum]candidat Candiat pour …\n\n\n"],["setPartie","Grille","Grille.html#method-i-setPartie","(partie)",""],["setPlateau","Partie","Partie.html#method-i-setPlateau","(plateau)","<p>Retourne le plateau\n"],["setSave","Partie","Partie.html#method-i-setSave","(nomPartie)","\n<pre>--</pre>\n<p>Perso je trouve ça inutile, sachant que la sauvegarde se fait avec la class\nSauvegarde.\n\n<pre>++</pre>\n"],["setScore","Score","Score.html#method-i-setScore","(time,niveauDifficulte)","<p>Méthode qui modifie le score d&#39;un joueur\n<p><p>Paramètre : &mdash; time -&gt; La durée d&#39;une partie niveauDifficulte …\n\n\n"],["setSolutionJoueur","Case","Case.html#method-i-setSolutionJoueur","(solJoueur)","<p>Méthode pour la MAJ de la solution du joueur de la case\n<p><p>Paramètre : &mdash; [Fixnum]solJoueur Solution du joueur …\n\n\n"],["setSolutionOriginale","Case","Case.html#method-i-setSolutionOriginale","(solOriginale)","<p>Méthode pour la MAJ de la solution originale de la case\n<p><p>Paramètre : &mdash; [Fixnum]solOriginale Solution originale …\n\n\n"],["setValeurSurFocus","Grille","Grille.html#method-i-setValeurSurFocus","(valeur)",""],["singleBox","Aide","Aide.html#method-i-singleBox","()","<p>Retourne une liste de case\n"],["start","Timer","Timer.html#method-i-start","(secStart)","<p>Méthode  d&#39;initialisation et de lancement du timer\n<p><p>Paramètre : &mdash; secStart -&gt; le temps de l&#39;initialisation …\n\n\n"],["startHint","CadreAide","CadreAide.html#method-i-startHint","()",""],["stop","Timer","Timer.html#method-i-stop","()","<p>Méthode de pause du timer\n"],["stopTemps","Partie","Partie.html#method-i-stopTemps","()",""],["supprimerProfil","Dir","Dir.html#method-i-supprimerProfil","(unPseudo)","<p><strong>Description</strong>:\n\n<p>méthode qui permet de supprimer un repertoire (profil)\n<p>*Paramètre*:\n"],["tick","Timer","Timer.html#method-i-tick","()","<p>Méthode qui calcule le temps passé et le renvoie\n"],["to_s","Generateur","Generateur.html#method-i-to_s","()","<p>Représentation texte humainement lisible\n\n<pre>* [Retourne :]\n            string</pre>\n"],["to_s","Joueur","Joueur.html#method-i-to_s","()","<p><strong>Description</strong>:\n\n<p>méthode d&#39;affichage d&#39;un joueur\n<p><strong>Exemple</strong>:\n"],["to_s","Plateau","Plateau.html#method-i-to_s","()","<p>Affichage propre de la grille du Plateau\n<p><p>Retourne : &mdash; string\n\n\n"],["to_s","Position","Position.html#method-i-to_s","()",""],["undo","GestionMemento","GestionMemento.html#method-i-undo","()","<p>Méthode qui permet de revenir à l&#39;état précédant la dernière action\n<p><p>Retourne : &mdash; memento ou nil\n\n\n"],["valideGrille","Plateau","Plateau.html#method-i-valideGrille","(position)","<p>Méthode pour savoir si une grille est valide\n<p><p>Paramètre : &mdash; fixnum position\n\n<p><p>Retourne : &mdash; booleen\n"],["verificationGrille","Aide","Aide.html#method-i-verificationGrille","()","<p>Méthode qui retourne les cases incorrects\n<p><p>Retourne : &mdash; tableau de case\n\n\n"],["README","","README_md.html","","<p>Projet Sudoku\n<p>Réalisation du projet aide à la résolution d&#39;un sudoku réalisé par\nModira MOK, Alexandre …\n"],["sudoku.sublime-workspace","","src/sudoku_sublime-workspace.html","","<p>{\n\n<pre>&quot;auto_complete&quot;:\n{\n        &quot;selected_items&quot;:\n        [\n        ]\n},\n&quot;buffers&quot;:\n[\n        {\n         ...</pre>\n"]]}}